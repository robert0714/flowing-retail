spring.application.name=order-camunda

spring.datasource.url=jdbc:h2:./camunda-db-order;DB_CLOSE_ON_EXIT=false
#https://github.com/spring-projects/spring-boot/issues/29585
#2.6.x was no longer created DDL automatically by default. So adding below properties explicit seemed to be the solution.
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.defer-datasource-initialization=true

spring.cloud.stream.bindings.output.destination=flowing-retail
spring.cloud.stream.bindings.output.content-type=application/json
spring.cloud.stream.bindings.input.destination=flowing-retail
spring.cloud.stream.bindings.input.content-type=application/json
spring.cloud.stream.bindings.input.group=order

spring.cloud.stream.kafka.binder.zkNodes=localhost:2181
spring.cloud.stream.kafka.binder.brokers=localhost:29092

server.port = 8092

camunda.bpm.admin-user.id=demo
camunda.bpm.admin-user.password=demo
camunda.bpm.filter.create=All
camunda.bpm.license-file=file:${user.home}/.camunda/license.txt

